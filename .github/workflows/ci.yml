name: CI
on:
    push:
        branches:
        - main
    pull_request:
    schedule:
        - cron:  '17 3 * * 0'

jobs:
    flake8:
        name: Flake8
        runs-on: ubuntu-latest
        steps:
        -   uses: actions/checkout@v2
        -
            uses: actions/setup-python@v1
            with:
                # matches compat target in setup.py
                python-version: '3.6'
        -   name: "Main Script"
            run: |
                curl -L -O https://gitlab.tiker.net/inducer/ci-support/raw/main/prepare-and-run-flake8.sh
                . ./prepare-and-run-flake8.sh "$(basename $GITHUB_REPOSITORY)" test examples

    pylint:
        name: Pylint
        runs-on: ubuntu-latest
        steps:
        -   uses: actions/checkout@v2
        -
            uses: actions/setup-python@v1
            with:
                python-version: '3.x'
        -   name: "Main Script"
            run: |
                EXTRA_INSTALL="pymbolic"
                curl -L -O https://gitlab.tiker.net/inducer/ci-support/raw/main/prepare-and-run-pylint.sh
                . ./prepare-and-run-pylint.sh "$(basename $GITHUB_REPOSITORY)" test/test_*.py

    pytest:
        name: Pytest on Py${{ matrix.python-version }}
        runs-on: ubuntu-latest
        strategy:
            matrix:
                python-version: ["3.6", "3.8", "3.x"]
        steps:
        -   uses: actions/checkout@v2
        -
            uses: actions/setup-python@v1
            with:
                python-version: ${{ matrix.python-version }}
        -   name: "Main Script"
            run: |
                EXTRA_INSTALL="numpy"
                sudo apt update
                sudo apt install gfortran-7 liblapack-dev libblas-dev
                sudo ln -sf /usr/bin/gfortran-7 /usr/bin/gfortran
                curl -L -O https://gitlab.tiker.net/inducer/ci-support/raw/main/build-and-test-py-project.sh
                . ./build-and-test-py-project.sh

    examples:
        name: Examples on Py${{ matrix.python-version }}
        runs-on: ubuntu-latest
        strategy:
            matrix:
                python-version: ["3.6", "3.8", "3.x"]
        steps:
        -   uses: actions/checkout@v2
        -
            uses: actions/setup-python@v1
            with:
                python-version: ${{ matrix.python-version }}
        -   name: "Main Script"
            run: |
                EXTRA_INSTALL="numpy"
                sudo apt update
                sudo apt install gfortran-7 liblapack-dev libblas-dev
                sudo ln -sf /usr/bin/gfortran-7 /usr/bin/gfortran
                curl -L -O https://gitlab.tiker.net/inducer/ci-support/raw/main/build-py-project-and-run-examples.sh
                . ./build-py-project-and-run-examples.sh


    docs:
        name: Documentation
        runs-on: ubuntu-latest
        steps:
        -   uses: actions/checkout@v2
        -
            uses: actions/setup-python@v1
            with:
                python-version: '3.x'
        -   name: "Main Script"
            run: |
                EXTRA_INSTALL="numpy"
                curl -L -O https://tiker.net/ci-support-v0
                . ci-support-v0
                build_py_project_in_venv
                build_docs

    downstream_tests:
        strategy:
            fail-fast: false
            matrix:
                downstream_project: [leap, grudge]
                run_what: [tests, examples]
                exclude:
                # no need, no leap dependency
                -   downstream_project: grudge
                    run_what: tests

        name: Run ${{ matrix.run_what }} for downstream project ${{ matrix.downstream_project }}
        runs-on: ubuntu-latest
        steps:
        -   uses: actions/checkout@v2
        -   name: "Main Script"
            env:
                DOWNSTREAM_PROJECT: ${{ matrix.downstream_project }}
                RUN_WHAT: ${{ matrix.run_what }}
            run: |
                git clone "https://github.com/inducer/$DOWNSTREAM_PROJECT.git"
                cd "$DOWNSTREAM_PROJECT"
                echo "*** $DOWNSTREAM_PROJECT version: $(git rev-parse --short HEAD)"

                sed -i "/egg=dagrt/ c git+file://$(readlink -f ..)#egg=dagrt" requirements.txt

                # Avoid slow or complicated tests in downstream projects
                export PYTEST_ADDOPTS="-k 'not (slowtest or octave or mpi)'"

                curl -L -O https://tiker.net/ci-support-v0
                . ./ci-support-v0

                if test -f .test-conda-env-py3.yml; then
                   build_py_project_in_conda_env
                else
                    EXTRA_INSTALL="numpy matplotlib scipy"
                    build_py_project_in_venv
                fi

                if test "$RUN_WHAT" = "tests"; then
                    test_py_project
                elif test "$RUN_WHAT" = "examples"; then
                    run_examples
                else
                    echo "Value $RUN_WHAT of RUN_WHAT not understood."
                    exit 1
                fi

# vim: sw=4
